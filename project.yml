name: Kurlyk
options:
  minimumXcodeGenVersion: 2.25.0
  bundleIdPrefix: com.test-apps
  createIntermediateGroups: true
  carthageExecutablePath: mint run Carthage/Carthage
  findCarthageFrameworks: true
  deploymentTarget:
    iOS: "15.0" # my default minimum iOS version

fileGroups:
  - project.yml
      
settings:
  base:
    DEVELOPMENT_TEAM: "YA3F4FB73R"
    
packages:
  ComposableArchitecture:
    url: https://github.com/pointfreeco/swift-composable-architecture
    from: 0.28.1

targets:

  # Main app target. Here is a place to merge all features with infrastructure.
  Kurlyk:
    type: application
    platform: iOS
    sources: [Kurlyk/Sources]
    info:
      path: Kurlyk/Sources/Application/Info.plist
      properties:
        CFBundleDisplayName: "Kurlyk"
        UILaunchStoryboardName: LaunchScreen
    settings:
      base:
        TARGETED_DEVICE_FAMILY: 1 # iPhone only, not iPad
        BUNDLE_SHORT_VERSION: "1.0.0" # App version
        BUNDLE_VERSION: "0"
        
    dependencies:
      - target: AuthenticationFeature
      
#      - package: ComposableArchitecture
      
    scheme:
      testTargets:
        - KurlykTests
        - DomainTests
      gatherCoverageData: true
  
  # Tests for main app.
  KurlykTests:
    platform: iOS
    type: bundle.unit-test
    sources: [Kurlyk/Tests]
    dependencies:
      - target: Kurlyk
    
    
  # -- FEATURES --
  
  # Authentication Feature
  AuthenticationFeature:
    platform: iOS
    type: framework
    sources: [AuthenticationFeature/Sources]
    info:
      path: AuthenticationFeature/Sources/Framework/Info.plist
    dependencies:
      - target: UIComponents
      
  AuthenticationFeatureTests:
    platform: iOS
    type: bundle.unit-test
    sources: [AuthenticationFeature/Tests]
    settings:
      base:
        SWIFT_OBJC_BRIDGING_HEADER: Domain/Tests/AuthenticationFeatureTests-Bridging-Header
    dependencies:
      - target: AuthenticationFeature

      
  # UI Components. Here you can find UI components which can be reused across multiple features.
  UIComponents:
    platform: iOS
    type: framework
    sources: [UIComponents/Sources]
    info:
      path: UIComponents/Sources/Framework/Info.plist
    dependencies:
      - target: Domain
      - package: ComposableArchitecture


  # Domain level. Here you can find domain models, abstract use cases and some useful tools.
  Domain:
    platform: iOS
    type: framework
    sources: [Domain/Sources]
    info:
      path: Domain/Sources/Framework/Info.plist

  # Tests for Domain level.
  DomainTests:
    platform: iOS
    type: bundle.unit-test
    sources: [Domain/Tests]
    settings:
      base:
        SWIFT_OBJC_BRIDGING_HEADER: Domain/Tests/DomainTests-Bridging-Header.h
    dependencies:
      - target: Domain
      - framework: Carthage/Build/Nimble.xcframework
      - framework: Carthage/Build/Quick.xcframework
    
    
